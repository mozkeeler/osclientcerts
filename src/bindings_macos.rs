/* -*- Mode: rust; rust-indent-offset: 4 -*- */
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

// This was originally generated by rust-bindgen at build time. Later in
// development it became clear that using bindgen for this library as part of
// mozilla-central would be difficult (if not impossible). So, this was
// converted to a static file and unused declarations were removed. Also,
// intermediate types added by rust-bindgen were removed for clarity.

pub type OSStatus = i32;
pub const errSecSuccess: OSStatus = 0;
extern "C" {
    pub fn SecCertificateGetTypeID() -> CFTypeID;
}
extern "C" {
    pub fn SecCertificateCopyData(certificate: SecCertificateRef) -> CFDataRef;
}
extern "C" {
    pub fn SecCertificateCopySubjectSummary(certificate: SecCertificateRef) -> CFStringRef;
}
extern "C" {
    pub fn SecIdentityGetTypeID() -> CFTypeID;
}
extern "C" {
    pub fn SecIdentityCopyCertificate(
        identityRef: SecIdentityRef,
        certificateRef: *mut SecCertificateRef,
    ) -> OSStatus;
}
extern "C" {
    pub fn SecIdentityCopyPrivateKey(
        identityRef: SecIdentityRef,
        privateKeyRef: *mut SecKeyRef,
    ) -> OSStatus;
}
extern "C" {
    pub static kSecClass: CFStringRef;
}
extern "C" {
    pub static kSecClassIdentity: CFStringRef;
}
extern "C" {
    pub static kSecAttrKeyType: CFStringRef;
}
extern "C" {
    pub static kSecAttrKeySizeInBits: CFStringRef;
}
extern "C" {
    pub static kSecAttrKeyTypeRSA: CFStringRef;
}
extern "C" {
    pub static kSecMatchLimit: CFStringRef;
}
extern "C" {
    pub static kSecMatchLimitAll: CFStringRef;
}
extern "C" {
    pub static kSecReturnRef: CFStringRef;
}
extern "C" {
    pub fn SecItemCopyMatching(query: CFDictionaryRef, result: *mut CFTypeRef) -> OSStatus;
}
extern "C" {
    pub fn SecKeyGetTypeID() -> CFTypeID;
}
pub type SecKeyAlgorithm = CFStringRef;
