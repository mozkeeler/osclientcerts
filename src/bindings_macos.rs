/* automatically generated by rust-bindgen */

pub type SInt32 = ::std::os::raw::c_int;
pub type OSStatus = SInt32;
pub type CFTypeID = ::std::os::raw::c_ulong;
pub type CFTypeRef = *const ::std::os::raw::c_void;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __CFString {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct OpaqueSecCertificateRef {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct OpaqueSecIdentityRef {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct OpaqueSecKeyRef {
    _unused: [u8; 0],
}
pub const errSecSuccess: BindgenTy8 = 0;
pub const errSecUnimplemented: BindgenTy8 = -4;
pub const errSecDiskFull: BindgenTy8 = -34;
pub const errSecDskFull: BindgenTy8 = -34;
pub const errSecIO: BindgenTy8 = -36;
pub const errSecOpWr: BindgenTy8 = -49;
pub const errSecParam: BindgenTy8 = -50;
pub const errSecWrPerm: BindgenTy8 = -61;
pub const errSecAllocate: BindgenTy8 = -108;
pub const errSecUserCanceled: BindgenTy8 = -128;
pub const errSecBadReq: BindgenTy8 = -909;
pub const errSecInternalComponent: BindgenTy8 = -2070;
pub const errSecCoreFoundationUnknown: BindgenTy8 = -4960;
pub const errSecMissingEntitlement: BindgenTy8 = -34018;
pub const errSecNotAvailable: BindgenTy8 = -25291;
pub const errSecReadOnly: BindgenTy8 = -25292;
pub const errSecAuthFailed: BindgenTy8 = -25293;
pub const errSecNoSuchKeychain: BindgenTy8 = -25294;
pub const errSecInvalidKeychain: BindgenTy8 = -25295;
pub const errSecDuplicateKeychain: BindgenTy8 = -25296;
pub const errSecDuplicateCallback: BindgenTy8 = -25297;
pub const errSecInvalidCallback: BindgenTy8 = -25298;
pub const errSecDuplicateItem: BindgenTy8 = -25299;
pub const errSecItemNotFound: BindgenTy8 = -25300;
pub const errSecBufferTooSmall: BindgenTy8 = -25301;
pub const errSecDataTooLarge: BindgenTy8 = -25302;
pub const errSecNoSuchAttr: BindgenTy8 = -25303;
pub const errSecInvalidItemRef: BindgenTy8 = -25304;
pub const errSecInvalidSearchRef: BindgenTy8 = -25305;
pub const errSecNoSuchClass: BindgenTy8 = -25306;
pub const errSecNoDefaultKeychain: BindgenTy8 = -25307;
pub const errSecInteractionNotAllowed: BindgenTy8 = -25308;
pub const errSecReadOnlyAttr: BindgenTy8 = -25309;
pub const errSecWrongSecVersion: BindgenTy8 = -25310;
pub const errSecKeySizeNotAllowed: BindgenTy8 = -25311;
pub const errSecNoStorageModule: BindgenTy8 = -25312;
pub const errSecNoCertificateModule: BindgenTy8 = -25313;
pub const errSecNoPolicyModule: BindgenTy8 = -25314;
pub const errSecInteractionRequired: BindgenTy8 = -25315;
pub const errSecDataNotAvailable: BindgenTy8 = -25316;
pub const errSecDataNotModifiable: BindgenTy8 = -25317;
pub const errSecCreateChainFailed: BindgenTy8 = -25318;
pub const errSecInvalidPrefsDomain: BindgenTy8 = -25319;
pub const errSecInDarkWake: BindgenTy8 = -25320;
pub const errSecACLNotSimple: BindgenTy8 = -25240;
pub const errSecPolicyNotFound: BindgenTy8 = -25241;
pub const errSecInvalidTrustSetting: BindgenTy8 = -25242;
pub const errSecNoAccessForItem: BindgenTy8 = -25243;
pub const errSecInvalidOwnerEdit: BindgenTy8 = -25244;
pub const errSecTrustNotAvailable: BindgenTy8 = -25245;
pub const errSecUnsupportedFormat: BindgenTy8 = -25256;
pub const errSecUnknownFormat: BindgenTy8 = -25257;
pub const errSecKeyIsSensitive: BindgenTy8 = -25258;
pub const errSecMultiplePrivKeys: BindgenTy8 = -25259;
pub const errSecPassphraseRequired: BindgenTy8 = -25260;
pub const errSecInvalidPasswordRef: BindgenTy8 = -25261;
pub const errSecInvalidTrustSettings: BindgenTy8 = -25262;
pub const errSecNoTrustSettings: BindgenTy8 = -25263;
pub const errSecPkcs12VerifyFailure: BindgenTy8 = -25264;
pub const errSecNotSigner: BindgenTy8 = -26267;
pub const errSecDecode: BindgenTy8 = -26275;
pub const errSecServiceNotAvailable: BindgenTy8 = -67585;
pub const errSecInsufficientClientID: BindgenTy8 = -67586;
pub const errSecDeviceReset: BindgenTy8 = -67587;
pub const errSecDeviceFailed: BindgenTy8 = -67588;
pub const errSecAppleAddAppACLSubject: BindgenTy8 = -67589;
pub const errSecApplePublicKeyIncomplete: BindgenTy8 = -67590;
pub const errSecAppleSignatureMismatch: BindgenTy8 = -67591;
pub const errSecAppleInvalidKeyStartDate: BindgenTy8 = -67592;
pub const errSecAppleInvalidKeyEndDate: BindgenTy8 = -67593;
pub const errSecConversionError: BindgenTy8 = -67594;
pub const errSecAppleSSLv2Rollback: BindgenTy8 = -67595;
pub const errSecQuotaExceeded: BindgenTy8 = -67596;
pub const errSecFileTooBig: BindgenTy8 = -67597;
pub const errSecInvalidDatabaseBlob: BindgenTy8 = -67598;
pub const errSecInvalidKeyBlob: BindgenTy8 = -67599;
pub const errSecIncompatibleDatabaseBlob: BindgenTy8 = -67600;
pub const errSecIncompatibleKeyBlob: BindgenTy8 = -67601;
pub const errSecHostNameMismatch: BindgenTy8 = -67602;
pub const errSecUnknownCriticalExtensionFlag: BindgenTy8 = -67603;
pub const errSecNoBasicConstraints: BindgenTy8 = -67604;
pub const errSecNoBasicConstraintsCA: BindgenTy8 = -67605;
pub const errSecInvalidAuthorityKeyID: BindgenTy8 = -67606;
pub const errSecInvalidSubjectKeyID: BindgenTy8 = -67607;
pub const errSecInvalidKeyUsageForPolicy: BindgenTy8 = -67608;
pub const errSecInvalidExtendedKeyUsage: BindgenTy8 = -67609;
pub const errSecInvalidIDLinkage: BindgenTy8 = -67610;
pub const errSecPathLengthConstraintExceeded: BindgenTy8 = -67611;
pub const errSecInvalidRoot: BindgenTy8 = -67612;
pub const errSecCRLExpired: BindgenTy8 = -67613;
pub const errSecCRLNotValidYet: BindgenTy8 = -67614;
pub const errSecCRLNotFound: BindgenTy8 = -67615;
pub const errSecCRLServerDown: BindgenTy8 = -67616;
pub const errSecCRLBadURI: BindgenTy8 = -67617;
pub const errSecUnknownCertExtension: BindgenTy8 = -67618;
pub const errSecUnknownCRLExtension: BindgenTy8 = -67619;
pub const errSecCRLNotTrusted: BindgenTy8 = -67620;
pub const errSecCRLPolicyFailed: BindgenTy8 = -67621;
pub const errSecIDPFailure: BindgenTy8 = -67622;
pub const errSecSMIMEEmailAddressesNotFound: BindgenTy8 = -67623;
pub const errSecSMIMEBadExtendedKeyUsage: BindgenTy8 = -67624;
pub const errSecSMIMEBadKeyUsage: BindgenTy8 = -67625;
pub const errSecSMIMEKeyUsageNotCritical: BindgenTy8 = -67626;
pub const errSecSMIMENoEmailAddress: BindgenTy8 = -67627;
pub const errSecSMIMESubjAltNameNotCritical: BindgenTy8 = -67628;
pub const errSecSSLBadExtendedKeyUsage: BindgenTy8 = -67629;
pub const errSecOCSPBadResponse: BindgenTy8 = -67630;
pub const errSecOCSPBadRequest: BindgenTy8 = -67631;
pub const errSecOCSPUnavailable: BindgenTy8 = -67632;
pub const errSecOCSPStatusUnrecognized: BindgenTy8 = -67633;
pub const errSecEndOfData: BindgenTy8 = -67634;
pub const errSecIncompleteCertRevocationCheck: BindgenTy8 = -67635;
pub const errSecNetworkFailure: BindgenTy8 = -67636;
pub const errSecOCSPNotTrustedToAnchor: BindgenTy8 = -67637;
pub const errSecRecordModified: BindgenTy8 = -67638;
pub const errSecOCSPSignatureError: BindgenTy8 = -67639;
pub const errSecOCSPNoSigner: BindgenTy8 = -67640;
pub const errSecOCSPResponderMalformedReq: BindgenTy8 = -67641;
pub const errSecOCSPResponderInternalError: BindgenTy8 = -67642;
pub const errSecOCSPResponderTryLater: BindgenTy8 = -67643;
pub const errSecOCSPResponderSignatureRequired: BindgenTy8 = -67644;
pub const errSecOCSPResponderUnauthorized: BindgenTy8 = -67645;
pub const errSecOCSPResponseNonceMismatch: BindgenTy8 = -67646;
pub const errSecCodeSigningBadCertChainLength: BindgenTy8 = -67647;
pub const errSecCodeSigningNoBasicConstraints: BindgenTy8 = -67648;
pub const errSecCodeSigningBadPathLengthConstraint: BindgenTy8 = -67649;
pub const errSecCodeSigningNoExtendedKeyUsage: BindgenTy8 = -67650;
pub const errSecCodeSigningDevelopment: BindgenTy8 = -67651;
pub const errSecResourceSignBadCertChainLength: BindgenTy8 = -67652;
pub const errSecResourceSignBadExtKeyUsage: BindgenTy8 = -67653;
pub const errSecTrustSettingDeny: BindgenTy8 = -67654;
pub const errSecInvalidSubjectName: BindgenTy8 = -67655;
pub const errSecUnknownQualifiedCertStatement: BindgenTy8 = -67656;
pub const errSecMobileMeRequestQueued: BindgenTy8 = -67657;
pub const errSecMobileMeRequestRedirected: BindgenTy8 = -67658;
pub const errSecMobileMeServerError: BindgenTy8 = -67659;
pub const errSecMobileMeServerNotAvailable: BindgenTy8 = -67660;
pub const errSecMobileMeServerAlreadyExists: BindgenTy8 = -67661;
pub const errSecMobileMeServerServiceErr: BindgenTy8 = -67662;
pub const errSecMobileMeRequestAlreadyPending: BindgenTy8 = -67663;
pub const errSecMobileMeNoRequestPending: BindgenTy8 = -67664;
pub const errSecMobileMeCSRVerifyFailure: BindgenTy8 = -67665;
pub const errSecMobileMeFailedConsistencyCheck: BindgenTy8 = -67666;
pub const errSecNotInitialized: BindgenTy8 = -67667;
pub const errSecInvalidHandleUsage: BindgenTy8 = -67668;
pub const errSecPVCReferentNotFound: BindgenTy8 = -67669;
pub const errSecFunctionIntegrityFail: BindgenTy8 = -67670;
pub const errSecInternalError: BindgenTy8 = -67671;
pub const errSecMemoryError: BindgenTy8 = -67672;
pub const errSecInvalidData: BindgenTy8 = -67673;
pub const errSecMDSError: BindgenTy8 = -67674;
pub const errSecInvalidPointer: BindgenTy8 = -67675;
pub const errSecSelfCheckFailed: BindgenTy8 = -67676;
pub const errSecFunctionFailed: BindgenTy8 = -67677;
pub const errSecModuleManifestVerifyFailed: BindgenTy8 = -67678;
pub const errSecInvalidGUID: BindgenTy8 = -67679;
pub const errSecInvalidHandle: BindgenTy8 = -67680;
pub const errSecInvalidDBList: BindgenTy8 = -67681;
pub const errSecInvalidPassthroughID: BindgenTy8 = -67682;
pub const errSecInvalidNetworkAddress: BindgenTy8 = -67683;
pub const errSecCRLAlreadySigned: BindgenTy8 = -67684;
pub const errSecInvalidNumberOfFields: BindgenTy8 = -67685;
pub const errSecVerificationFailure: BindgenTy8 = -67686;
pub const errSecUnknownTag: BindgenTy8 = -67687;
pub const errSecInvalidSignature: BindgenTy8 = -67688;
pub const errSecInvalidName: BindgenTy8 = -67689;
pub const errSecInvalidCertificateRef: BindgenTy8 = -67690;
pub const errSecInvalidCertificateGroup: BindgenTy8 = -67691;
pub const errSecTagNotFound: BindgenTy8 = -67692;
pub const errSecInvalidQuery: BindgenTy8 = -67693;
pub const errSecInvalidValue: BindgenTy8 = -67694;
pub const errSecCallbackFailed: BindgenTy8 = -67695;
pub const errSecACLDeleteFailed: BindgenTy8 = -67696;
pub const errSecACLReplaceFailed: BindgenTy8 = -67697;
pub const errSecACLAddFailed: BindgenTy8 = -67698;
pub const errSecACLChangeFailed: BindgenTy8 = -67699;
pub const errSecInvalidAccessCredentials: BindgenTy8 = -67700;
pub const errSecInvalidRecord: BindgenTy8 = -67701;
pub const errSecInvalidACL: BindgenTy8 = -67702;
pub const errSecInvalidSampleValue: BindgenTy8 = -67703;
pub const errSecIncompatibleVersion: BindgenTy8 = -67704;
pub const errSecPrivilegeNotGranted: BindgenTy8 = -67705;
pub const errSecInvalidScope: BindgenTy8 = -67706;
pub const errSecPVCAlreadyConfigured: BindgenTy8 = -67707;
pub const errSecInvalidPVC: BindgenTy8 = -67708;
pub const errSecEMMLoadFailed: BindgenTy8 = -67709;
pub const errSecEMMUnloadFailed: BindgenTy8 = -67710;
pub const errSecAddinLoadFailed: BindgenTy8 = -67711;
pub const errSecInvalidKeyRef: BindgenTy8 = -67712;
pub const errSecInvalidKeyHierarchy: BindgenTy8 = -67713;
pub const errSecAddinUnloadFailed: BindgenTy8 = -67714;
pub const errSecLibraryReferenceNotFound: BindgenTy8 = -67715;
pub const errSecInvalidAddinFunctionTable: BindgenTy8 = -67716;
pub const errSecInvalidServiceMask: BindgenTy8 = -67717;
pub const errSecModuleNotLoaded: BindgenTy8 = -67718;
pub const errSecInvalidSubServiceID: BindgenTy8 = -67719;
pub const errSecAttributeNotInContext: BindgenTy8 = -67720;
pub const errSecModuleManagerInitializeFailed: BindgenTy8 = -67721;
pub const errSecModuleManagerNotFound: BindgenTy8 = -67722;
pub const errSecEventNotificationCallbackNotFound: BindgenTy8 = -67723;
pub const errSecInputLengthError: BindgenTy8 = -67724;
pub const errSecOutputLengthError: BindgenTy8 = -67725;
pub const errSecPrivilegeNotSupported: BindgenTy8 = -67726;
pub const errSecDeviceError: BindgenTy8 = -67727;
pub const errSecAttachHandleBusy: BindgenTy8 = -67728;
pub const errSecNotLoggedIn: BindgenTy8 = -67729;
pub const errSecAlgorithmMismatch: BindgenTy8 = -67730;
pub const errSecKeyUsageIncorrect: BindgenTy8 = -67731;
pub const errSecKeyBlobTypeIncorrect: BindgenTy8 = -67732;
pub const errSecKeyHeaderInconsistent: BindgenTy8 = -67733;
pub const errSecUnsupportedKeyFormat: BindgenTy8 = -67734;
pub const errSecUnsupportedKeySize: BindgenTy8 = -67735;
pub const errSecInvalidKeyUsageMask: BindgenTy8 = -67736;
pub const errSecUnsupportedKeyUsageMask: BindgenTy8 = -67737;
pub const errSecInvalidKeyAttributeMask: BindgenTy8 = -67738;
pub const errSecUnsupportedKeyAttributeMask: BindgenTy8 = -67739;
pub const errSecInvalidKeyLabel: BindgenTy8 = -67740;
pub const errSecUnsupportedKeyLabel: BindgenTy8 = -67741;
pub const errSecInvalidKeyFormat: BindgenTy8 = -67742;
pub const errSecUnsupportedVectorOfBuffers: BindgenTy8 = -67743;
pub const errSecInvalidInputVector: BindgenTy8 = -67744;
pub const errSecInvalidOutputVector: BindgenTy8 = -67745;
pub const errSecInvalidContext: BindgenTy8 = -67746;
pub const errSecInvalidAlgorithm: BindgenTy8 = -67747;
pub const errSecInvalidAttributeKey: BindgenTy8 = -67748;
pub const errSecMissingAttributeKey: BindgenTy8 = -67749;
pub const errSecInvalidAttributeInitVector: BindgenTy8 = -67750;
pub const errSecMissingAttributeInitVector: BindgenTy8 = -67751;
pub const errSecInvalidAttributeSalt: BindgenTy8 = -67752;
pub const errSecMissingAttributeSalt: BindgenTy8 = -67753;
pub const errSecInvalidAttributePadding: BindgenTy8 = -67754;
pub const errSecMissingAttributePadding: BindgenTy8 = -67755;
pub const errSecInvalidAttributeRandom: BindgenTy8 = -67756;
pub const errSecMissingAttributeRandom: BindgenTy8 = -67757;
pub const errSecInvalidAttributeSeed: BindgenTy8 = -67758;
pub const errSecMissingAttributeSeed: BindgenTy8 = -67759;
pub const errSecInvalidAttributePassphrase: BindgenTy8 = -67760;
pub const errSecMissingAttributePassphrase: BindgenTy8 = -67761;
pub const errSecInvalidAttributeKeyLength: BindgenTy8 = -67762;
pub const errSecMissingAttributeKeyLength: BindgenTy8 = -67763;
pub const errSecInvalidAttributeBlockSize: BindgenTy8 = -67764;
pub const errSecMissingAttributeBlockSize: BindgenTy8 = -67765;
pub const errSecInvalidAttributeOutputSize: BindgenTy8 = -67766;
pub const errSecMissingAttributeOutputSize: BindgenTy8 = -67767;
pub const errSecInvalidAttributeRounds: BindgenTy8 = -67768;
pub const errSecMissingAttributeRounds: BindgenTy8 = -67769;
pub const errSecInvalidAlgorithmParms: BindgenTy8 = -67770;
pub const errSecMissingAlgorithmParms: BindgenTy8 = -67771;
pub const errSecInvalidAttributeLabel: BindgenTy8 = -67772;
pub const errSecMissingAttributeLabel: BindgenTy8 = -67773;
pub const errSecInvalidAttributeKeyType: BindgenTy8 = -67774;
pub const errSecMissingAttributeKeyType: BindgenTy8 = -67775;
pub const errSecInvalidAttributeMode: BindgenTy8 = -67776;
pub const errSecMissingAttributeMode: BindgenTy8 = -67777;
pub const errSecInvalidAttributeEffectiveBits: BindgenTy8 = -67778;
pub const errSecMissingAttributeEffectiveBits: BindgenTy8 = -67779;
pub const errSecInvalidAttributeStartDate: BindgenTy8 = -67780;
pub const errSecMissingAttributeStartDate: BindgenTy8 = -67781;
pub const errSecInvalidAttributeEndDate: BindgenTy8 = -67782;
pub const errSecMissingAttributeEndDate: BindgenTy8 = -67783;
pub const errSecInvalidAttributeVersion: BindgenTy8 = -67784;
pub const errSecMissingAttributeVersion: BindgenTy8 = -67785;
pub const errSecInvalidAttributePrime: BindgenTy8 = -67786;
pub const errSecMissingAttributePrime: BindgenTy8 = -67787;
pub const errSecInvalidAttributeBase: BindgenTy8 = -67788;
pub const errSecMissingAttributeBase: BindgenTy8 = -67789;
pub const errSecInvalidAttributeSubprime: BindgenTy8 = -67790;
pub const errSecMissingAttributeSubprime: BindgenTy8 = -67791;
pub const errSecInvalidAttributeIterationCount: BindgenTy8 = -67792;
pub const errSecMissingAttributeIterationCount: BindgenTy8 = -67793;
pub const errSecInvalidAttributeDLDBHandle: BindgenTy8 = -67794;
pub const errSecMissingAttributeDLDBHandle: BindgenTy8 = -67795;
pub const errSecInvalidAttributeAccessCredentials: BindgenTy8 = -67796;
pub const errSecMissingAttributeAccessCredentials: BindgenTy8 = -67797;
pub const errSecInvalidAttributePublicKeyFormat: BindgenTy8 = -67798;
pub const errSecMissingAttributePublicKeyFormat: BindgenTy8 = -67799;
pub const errSecInvalidAttributePrivateKeyFormat: BindgenTy8 = -67800;
pub const errSecMissingAttributePrivateKeyFormat: BindgenTy8 = -67801;
pub const errSecInvalidAttributeSymmetricKeyFormat: BindgenTy8 = -67802;
pub const errSecMissingAttributeSymmetricKeyFormat: BindgenTy8 = -67803;
pub const errSecInvalidAttributeWrappedKeyFormat: BindgenTy8 = -67804;
pub const errSecMissingAttributeWrappedKeyFormat: BindgenTy8 = -67805;
pub const errSecStagedOperationInProgress: BindgenTy8 = -67806;
pub const errSecStagedOperationNotStarted: BindgenTy8 = -67807;
pub const errSecVerifyFailed: BindgenTy8 = -67808;
pub const errSecQuerySizeUnknown: BindgenTy8 = -67809;
pub const errSecBlockSizeMismatch: BindgenTy8 = -67810;
pub const errSecPublicKeyInconsistent: BindgenTy8 = -67811;
pub const errSecDeviceVerifyFailed: BindgenTy8 = -67812;
pub const errSecInvalidLoginName: BindgenTy8 = -67813;
pub const errSecAlreadyLoggedIn: BindgenTy8 = -67814;
pub const errSecInvalidDigestAlgorithm: BindgenTy8 = -67815;
pub const errSecInvalidCRLGroup: BindgenTy8 = -67816;
pub const errSecCertificateCannotOperate: BindgenTy8 = -67817;
pub const errSecCertificateExpired: BindgenTy8 = -67818;
pub const errSecCertificateNotValidYet: BindgenTy8 = -67819;
pub const errSecCertificateRevoked: BindgenTy8 = -67820;
pub const errSecCertificateSuspended: BindgenTy8 = -67821;
pub const errSecInsufficientCredentials: BindgenTy8 = -67822;
pub const errSecInvalidAction: BindgenTy8 = -67823;
pub const errSecInvalidAuthority: BindgenTy8 = -67824;
pub const errSecVerifyActionFailed: BindgenTy8 = -67825;
pub const errSecInvalidCertAuthority: BindgenTy8 = -67826;
pub const errSecInvaldCRLAuthority: BindgenTy8 = -67827;
pub const errSecInvalidCRLEncoding: BindgenTy8 = -67828;
pub const errSecInvalidCRLType: BindgenTy8 = -67829;
pub const errSecInvalidCRL: BindgenTy8 = -67830;
pub const errSecInvalidFormType: BindgenTy8 = -67831;
pub const errSecInvalidID: BindgenTy8 = -67832;
pub const errSecInvalidIdentifier: BindgenTy8 = -67833;
pub const errSecInvalidIndex: BindgenTy8 = -67834;
pub const errSecInvalidPolicyIdentifiers: BindgenTy8 = -67835;
pub const errSecInvalidTimeString: BindgenTy8 = -67836;
pub const errSecInvalidReason: BindgenTy8 = -67837;
pub const errSecInvalidRequestInputs: BindgenTy8 = -67838;
pub const errSecInvalidResponseVector: BindgenTy8 = -67839;
pub const errSecInvalidStopOnPolicy: BindgenTy8 = -67840;
pub const errSecInvalidTuple: BindgenTy8 = -67841;
pub const errSecMultipleValuesUnsupported: BindgenTy8 = -67842;
pub const errSecNotTrusted: BindgenTy8 = -67843;
pub const errSecNoDefaultAuthority: BindgenTy8 = -67844;
pub const errSecRejectedForm: BindgenTy8 = -67845;
pub const errSecRequestLost: BindgenTy8 = -67846;
pub const errSecRequestRejected: BindgenTy8 = -67847;
pub const errSecUnsupportedAddressType: BindgenTy8 = -67848;
pub const errSecUnsupportedService: BindgenTy8 = -67849;
pub const errSecInvalidTupleGroup: BindgenTy8 = -67850;
pub const errSecInvalidBaseACLs: BindgenTy8 = -67851;
pub const errSecInvalidTupleCredendtials: BindgenTy8 = -67852;
pub const errSecInvalidEncoding: BindgenTy8 = -67853;
pub const errSecInvalidValidityPeriod: BindgenTy8 = -67854;
pub const errSecInvalidRequestor: BindgenTy8 = -67855;
pub const errSecRequestDescriptor: BindgenTy8 = -67856;
pub const errSecInvalidBundleInfo: BindgenTy8 = -67857;
pub const errSecInvalidCRLIndex: BindgenTy8 = -67858;
pub const errSecNoFieldValues: BindgenTy8 = -67859;
pub const errSecUnsupportedFieldFormat: BindgenTy8 = -67860;
pub const errSecUnsupportedIndexInfo: BindgenTy8 = -67861;
pub const errSecUnsupportedLocality: BindgenTy8 = -67862;
pub const errSecUnsupportedNumAttributes: BindgenTy8 = -67863;
pub const errSecUnsupportedNumIndexes: BindgenTy8 = -67864;
pub const errSecUnsupportedNumRecordTypes: BindgenTy8 = -67865;
pub const errSecFieldSpecifiedMultiple: BindgenTy8 = -67866;
pub const errSecIncompatibleFieldFormat: BindgenTy8 = -67867;
pub const errSecInvalidParsingModule: BindgenTy8 = -67868;
pub const errSecDatabaseLocked: BindgenTy8 = -67869;
pub const errSecDatastoreIsOpen: BindgenTy8 = -67870;
pub const errSecMissingValue: BindgenTy8 = -67871;
pub const errSecUnsupportedQueryLimits: BindgenTy8 = -67872;
pub const errSecUnsupportedNumSelectionPreds: BindgenTy8 = -67873;
pub const errSecUnsupportedOperator: BindgenTy8 = -67874;
pub const errSecInvalidDBLocation: BindgenTy8 = -67875;
pub const errSecInvalidAccessRequest: BindgenTy8 = -67876;
pub const errSecInvalidIndexInfo: BindgenTy8 = -67877;
pub const errSecInvalidNewOwner: BindgenTy8 = -67878;
pub const errSecInvalidModifyMode: BindgenTy8 = -67879;
pub const errSecMissingRequiredExtension: BindgenTy8 = -67880;
pub const errSecExtendedKeyUsageNotCritical: BindgenTy8 = -67881;
pub const errSecTimestampMissing: BindgenTy8 = -67882;
pub const errSecTimestampInvalid: BindgenTy8 = -67883;
pub const errSecTimestampNotTrusted: BindgenTy8 = -67884;
pub const errSecTimestampServiceNotAvailable: BindgenTy8 = -67885;
pub const errSecTimestampBadAlg: BindgenTy8 = -67886;
pub const errSecTimestampBadRequest: BindgenTy8 = -67887;
pub const errSecTimestampBadDataFormat: BindgenTy8 = -67888;
pub const errSecTimestampTimeNotAvailable: BindgenTy8 = -67889;
pub const errSecTimestampUnacceptedPolicy: BindgenTy8 = -67890;
pub const errSecTimestampUnacceptedExtension: BindgenTy8 = -67891;
pub const errSecTimestampAddInfoNotAvailable: BindgenTy8 = -67892;
pub const errSecTimestampSystemFailure: BindgenTy8 = -67893;
pub const errSecSigningTimeMissing: BindgenTy8 = -67894;
pub const errSecTimestampRejection: BindgenTy8 = -67895;
pub const errSecTimestampWaiting: BindgenTy8 = -67896;
pub const errSecTimestampRevocationWarning: BindgenTy8 = -67897;
pub const errSecTimestampRevocationNotification: BindgenTy8 = -67898;
pub type BindgenTy8 = i32;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __CFData {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __CFDictionary {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __CFError {
    _unused: [u8; 0],
}
extern "C" {
    pub fn SecCertificateGetTypeID() -> CFTypeID;
}
extern "C" {
    pub fn SecCertificateCopyData(certificate: SecCertificateRef) -> CFDataRef;
}
extern "C" {
    pub fn SecCertificateCopySubjectSummary(certificate: SecCertificateRef) -> CFStringRef;
}
extern "C" {
    pub fn SecCertificateCopyNormalizedIssuerSequence(certificate: SecCertificateRef) -> CFDataRef;
}
extern "C" {
    pub fn SecCertificateCopyNormalizedSubjectSequence(certificate: SecCertificateRef)
        -> CFDataRef;
}
extern "C" {
    pub fn SecCertificateCopyKey(certificate: SecCertificateRef) -> SecKeyRef;
}
extern "C" {
    pub fn SecCertificateCopySerialNumberData(
        certificate: SecCertificateRef,
        error: *mut CFErrorRef,
    ) -> CFDataRef;
}
extern "C" {
    pub fn SecIdentityGetTypeID() -> CFTypeID;
}
extern "C" {
    pub fn SecIdentityCopyCertificate(
        identityRef: SecIdentityRef,
        certificateRef: *mut SecCertificateRef,
    ) -> OSStatus;
}
extern "C" {
    pub fn SecIdentityCopyPrivateKey(
        identityRef: SecIdentityRef,
        privateKeyRef: *mut SecKeyRef,
    ) -> OSStatus;
}
extern "C" {
    pub static kSecClass: CFStringRef;
}
extern "C" {
    pub static kSecClassIdentity: CFStringRef;
}
extern "C" {
    pub static kSecAttrKeyType: CFStringRef;
}
extern "C" {
    pub static kSecAttrKeySizeInBits: CFStringRef;
}
extern "C" {
    pub static kSecAttrKeyTypeRSA: CFStringRef;
}
extern "C" {
    pub static kSecAttrKeyTypeECSECPrimeRandom: CFStringRef;
}
extern "C" {
    pub static kSecMatchLimit: CFStringRef;
}
extern "C" {
    pub static kSecMatchLimitAll: CFStringRef;
}
extern "C" {
    pub static kSecReturnRef: CFStringRef;
}
extern "C" {
    pub fn SecItemCopyMatching(query: CFDictionaryRef, result: *mut CFTypeRef) -> OSStatus;
}
extern "C" {
    pub fn SecKeyGetTypeID() -> CFTypeID;
}
extern "C" {
    pub fn SecKeyCopyExternalRepresentation(key: SecKeyRef, error: *mut CFErrorRef) -> CFDataRef;
}
extern "C" {
    pub fn SecKeyCopyAttributes(key: SecKeyRef) -> CFDictionaryRef;
}
pub type SecKeyAlgorithm = CFStringRef;
extern "C" {
    pub static kSecKeyAlgorithmRSASignatureDigestPKCS1v15Raw: SecKeyAlgorithm;
}
extern "C" {
    pub static kSecKeyAlgorithmECDSASignatureDigestX962SHA1: SecKeyAlgorithm;
}
extern "C" {
    pub static kSecKeyAlgorithmECDSASignatureDigestX962SHA256: SecKeyAlgorithm;
}
extern "C" {
    pub static kSecKeyAlgorithmECDSASignatureDigestX962SHA384: SecKeyAlgorithm;
}
extern "C" {
    pub static kSecKeyAlgorithmECDSASignatureDigestX962SHA512: SecKeyAlgorithm;
}
extern "C" {
    pub fn SecKeyCreateSignature(
        key: SecKeyRef,
        algorithm: SecKeyAlgorithm,
        dataToSign: CFDataRef,
        error: *mut CFErrorRef,
    ) -> CFDataRef;
}
